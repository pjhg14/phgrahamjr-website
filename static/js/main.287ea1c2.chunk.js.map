{"version":3,"sources":["components/sub-components/SkeletonCard.js","components/sub-components/TechList.js","components/content/projects/ProjectCard.js","components/content/projects/ProjectList.js","components/sub-components/LinkButtonBar.js","components/content/projects/ProjectModal.js","utilities/modalReducer.js","components/content/projects/ProjectPage.js","components/content/LandingPage.js","components/content/AboutPage.js","components/content/ContactPage.js","components/MainContent.js","resume/Paul_G_resume_ca2021.pdf","components/Navigation.js","App.js","index.js"],"names":["SkeletonCard","className","TechList","techList","techs","map","tech","name","join","ProjectCard","date","project","dispatch","useContext","ModalContext","title","image","short_description","technologies","completion_date","complexity","handleCardClick","type","payload","onClick","onKeyDown","tabIndex","src","alt","toDateString","split","slice","skeleProjects","id","ProjectList","projects","projectCards","skeleCards","card","length","LinkButtonBar","repos","liveURL","repoButtons","repo","host","toLowerCase","href","link","target","rel","convertToLogo","icon","faGithub","faGitlab","ProjectModal","state","handleClose","isOpen","createPortal","video_url","frameBorder","allow","allowfullscreen","width","repositories","live_url","long_description","document","getElementById","initialState","modalReducer","action","createContext","initialProjects","Date","requirements","ProjectPage","useState","useReducer","filter","setFilter","isAsc","setIsAsc","useEffect","sortedProjects","sort","projectA","projectB","Provider","value","htmlFor","onChange","e","LandingPage","AboutPage","ContactPage","faLinkedin","faEnvelope","MainContent","exact","path","Navigation","isDarkTheme","setIsDarkTheme","active","setActive","to","resume","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.287ea1c2.chunk.js","sourcesContent":["export default function SkeletonCard() {\n    return(\n        <div className=\"skele-card\">\n            <div className=\"card-img skele-bg\"></div>\n            <div className=\"skele-detail\">\n                {/* <h3>{title}</h3> */}\n                <div className=\"skele-bg skele-title\"></div>\n                {/* <p>{short_description}</p> */}\n                <div className=\"skele-desc\">\n                    <div className=\"skele-bg\"></div>\n                    <div className=\"skele-bg\"></div>\n                    <div className=\"skele-bg\"></div>\n                </div>\n                \n                \n                {/* <p>list of techs used</p> */}\n                <div className=\"skele-bg skele-techs\"></div>\n            </div>\n        </div>\n    )\n}","export default function TechList({ className, techs }) {\n    // TODO: Render tech logo with name string\n    const techList = techs.map(tech => tech.name).join(', ')\n    \n    return(\n        <div className={className}>\n            {techList}\n        </div>\n    )\n}","import { useContext } from \"react\";\nimport TechList from \"../../sub-components/TechList\";\nimport { ModalContext } from \"./ProjectPage\";\n\nexport default function ProjectCard({ project }) {\n    const { dispatch } = useContext(ModalContext)\n    const { title, image, short_description, technologies, completion_date, complexity } = project\n\n    function handleCardClick() {\n        dispatch({\n            type: \"open\",\n            payload: project\n        })\n    }\n\n    return(\n        <div className=\"project-card\" onClick={handleCardClick} onKeyDown={handleCardClick} tabIndex=\"0\">\n            <div className=\"project-card-content\">\n                <div className=\"project-card-front\">\n                    {/* TODO: When project fetch is implemented, remove image ternary (backup images will be set after fetch result) */}\n                    { !!image ? \n                        <img className=\"card-img skele-bg\" src={image} alt={`${title} project`} /> \n                        : \n                        <img className=\"card-img skele-bg\" src=\"/assets/project-image-not-found.png\" alt=\"default\"/>\n                    }\n                    <h3>{title}</h3>\n                    <p>complexity: {complexity}</p>\n                    <p>Completed: {toNormalizedDate(completion_date)}</p>\n                </div>\n                <div className=\"project-card-back\">\n                    <p>{short_description}</p>\n                    <TechList className=\"card-techs\" techs={technologies}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction toNormalizedDate(date) {\n    return date.toDateString().split(\" \").slice(1).join(\" \")\n}\n\n/*\n<div className=\"card\" onClick={handleCardClick} onKeyDown={handleCardClick} tabIndex=\"0\">\n    { !!image ? \n        <img className=\"card-img skele-bg\" src={image} alt={`${title} project`} /> \n        : \n        <img className=\"card-img skele-bg\" src=\"/assets/project-image-not-found.png\" alt=\"default\"/>\n    }\n     <div className=\"card-detail\">\n        <h2>{title}</h2>\n        <p>{short_description}</p>\n        <p className=\"tech-list\">[tech1] [tech2] [tech3] [tech4] [tech5]</p>\n    </div>\n</div>\n*/","import SkeletonCard from \"../../sub-components/SkeletonCard\";\nimport ProjectCard from \"./ProjectCard\";\n\nconst skeleProjects = [\n    {id: 1},\n    {id: 2},\n    {id: 3},\n    {id: 4},\n]\n\nfunction ProjectList({ projects }) {\n    \n    const projectCards = projects.map(project => {\n        return <ProjectCard key={project.id} project={project} />\n    })\n\n    const skeleCards = skeleProjects.map(card => {\n        return <SkeletonCard key={card.id} />\n    })\n\n    return(\n        <div className=\"card-list\">\n            {projects.length === 0 ? skeleCards : projectCards}\n        </div>\n    )\n}\n\nexport default ProjectList","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGitlab } from \"@fortawesome/free-brands-svg-icons\";\n\nexport default function LinkButtonBar({ repos, liveURL }) {\n\n    const repoButtons = repos.map(repo => {\n        return(\n            <a key={repo.id} className={`repo-button ${repo.host.toLowerCase()}`} href={repo.link} target=\"_blank\" rel=\"noreferrer\">\n                {convertToLogo(repo.host)} {repo.type}\n            </a>\n        )\n    })\n    return(\n        <div className=\"repo-bar\">\n            {repoButtons}\n            {liveURL &&\n                <a className=\"repo-button\" href={liveURL} target=\"_blank\" rel=\"noreferrer\">\n                    Website\n                </a>\n            }\n        </div>\n    )\n}\n\nfunction convertToLogo(host) {\n    switch (host) {\n        case \"GitHub\":\n            return <FontAwesomeIcon icon={faGithub} />\n\n        case \"GitLab\":\n            return <FontAwesomeIcon icon={faGitlab} />\n        default:\n            break;\n    }\n}","import { useContext } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport LinkButtonBar from \"../../sub-components/LinkButtonBar\";\nimport TechList from \"../../sub-components/TechList\";\nimport { ModalContext } from \"./ProjectPage\";\n\n// Project Structure\n// {\n//     id: 1,\n//     title: \"test1\",\n//     short_description: \"A very short description\",\n//     long_description: \"A longer description going into the technologies used for this project\",\n//     completion_date: new Date(\"2021-09-14\"),\n//     repositories: [\n//         {\n//             id: 1,\n//             host: \"Github\",\n//             type: \"Frontend\",\n//             link: \"\"\n//         },\n//         {\n//             id: 2,\n//             host: \"Github\",\n//             type: \"Backend\",\n//             link: \"\"\n//         }\n//     ],\n//     requirements: [\n//         {\n//             id: 1,\n//             requirement: \"\"\n//         },\n//         {\n//             id: 2,\n//             requirement: \"\"\n//         },\n//         {\n//             id: 3,\n//             requirement: \"\"\n//         }\n//     ],\n//     technologies: [\n//         {\n//             id: 1,\n//             name: \"React\"\n//         },\n//         {\n//             id: 2,\n//             name: \"Rails\"\n//         },\n//         {\n//             id: 3,\n//             name: \"JavaScript\"\n//         }\n//     ],\n//     video_url: \"\",\n//     live_url: \"\",\n//     complexity: 3,\n//     image: \"\"\n// }\n\nexport default function ProjectModal() {\n    const { state, dispatch } = useContext(ModalContext)\n\n    function handleClose() {\n        dispatch({ type: \"close\" })\n    }\n    \n    if (state.isOpen) {\n        return createPortal(\n            <>\n                <div className=\"overlay\" onClick={handleClose} />\n                <div className=\"modal\">\n                    <button className=\"modal-close\" onClick={handleClose}>close</button>\n                    <h2>{state.project.title}</h2>\n                    { !!state.project.video_url ? (\n                            <iframe\n                                className=\"demo-video\"\n                                src={state.project.video_url} \n                                title=\"Youtube video player\" \n                                frameBorder=\"0\" \n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                allowfullscreen\n                            />\n                        ) : (\n                            <img \n                                className=\"video-fallback\"\n                                width=\"560\"\n                                src={state.project.image} \n                                alt=\"project\"\n                            />\n                        )\n                    }\n                    {/* Date Completed */}\n                    <LinkButtonBar repos={state.project.repositories} liveURL={state.project.live_url}/>\n                    \n                    <p>{state.project.long_description}</p>\n                    <p>Made With:</p>\n                    <TechList techs={state.project.technologies}/>               \n                </div>\n            </>,\n            document.getElementById('portal')\n        )\n    } else {\n        return null\n    }\n\n    \n}","export const initialState = {\n    project: null,\n    isOpen: false\n}\n\nexport function modalReducer(state, action) {\n    switch (action.type) {\n        case \"open\":\n            // opens modal and displays provided project\n            return {\n                ...state,\n                project: action.payload,\n                isOpen: true\n            }\n        case \"close\":\n            // closes modal and clears current project\n            return {\n                ...state,\n                project: null,\n                isOpen: false\n            }\n        \n        default:\n            return state;\n    }\n}","import { createContext, useEffect, useReducer, useState } from \"react\"\nimport ProjectList from \"./ProjectList\"\nimport ProjectModal from \"./ProjectModal\";\n// import { projectURL } from \"../../../utilities/links\";\nimport { modalReducer, initialState } from \"../../../utilities/modalReducer\";\n\nexport const ModalContext = createContext()\n\nconst initialProjects = [\n    {\n        id: 1,\n        title: \"Loo-Review\",\n        short_description: \"A compendium of user-curated restrooms around the New York City area\",\n        long_description: \"Loo-Review provides a list of restrooms provided by a server in which the user can review information related to said restroom. Along with that, the user will be able to leave comments on the desired restroom as well as suggest new restrooms to be added to the database\",\n        completion_date: new Date(\"2021-04-23\"),\n        repositories: [\n            {\n                id: 1,\n                host: \"GitHub\",\n                type: \"Frontend\",\n                link: \"https://github.com/pjhg14/Phase-2-rr-location-frontend\"\n            },\n            {\n                id: 2,\n                host: \"GitHub\",\n                type: \"Backend\",\n                link: \"https://github.com/pjhg14/rr-locator-backend\"\n            }\n        ],\n        requirements: [],\n        technologies: [\n            {\n                id: 1,\n                name: \"React\"\n            },\n            {\n                id: 2,\n                name: \"JavaScript\"\n            },\n            {\n                id: 3,\n                name: \"Node.js\"\n            }\n        ],\n        video_url: \"\",\n        live_url: \"https://loo-review.netlify.app/\",\n        complexity: 2,\n        image: \"assets/loo_review_main_page.png\"\n    },\n    {\n        id: 2,\n        title: \"Nerd-Space\",\n        short_description: \"A compendium of user-curated comics and discussion threads\",\n        long_description: \"NerdSpace will allow users to review comics, find new comics, and join groups to discuss with other users\",\n        completion_date: new Date(\"2021-05-14\"),\n        repositories: [\n            {\n                id: 1,\n                host: \"GitHub\",\n                type: \"Frontend\",\n                link: \"https://github.com/pjhg14/ns-frontend\"\n            },\n            {\n                id: 2,\n                host: \"GitHub\",\n                type: \"Backend\",\n                link: \"https://github.com/jbrundagejr/phase-3-ruby-group-project-rack-react\"\n            }\n        ],\n        requirements: [],\n        technologies: [\n            {\n                id: 1,\n                name: \"React\"\n            },\n            {\n                id: 2,\n                name: \"JavaScript\"\n            },\n            {\n                id: 3,\n                name: \"Node.js\"\n            },\n            {\n                id: 4,\n                name: \"Ruby\"\n            },\n            {\n                id: 5,\n                name: \"Rack\"\n            }\n        ],\n        video_url: \"\",\n        live_url: \"\",\n        complexity: 3,\n        image: \"assets/ns-comic-page.png\"\n    },\n    {\n        id: 3,\n        title: \"Career-Pad\",\n        short_description: \"A career based note taking application\",\n        long_description: \"A web application that allows the user to keep track of their job hunting experience by logging applications, contacts related to those applications, current and future experience, etc.\",\n        completion_date: new Date(\"2021-06-26\"),\n        repositories: [\n            {\n                id: 1,\n                host: \"GitHub\",\n                type: \"Frontend\",\n                link: \"https://github.com/pjhg14/phase5-project-frontend\"\n            },\n            {\n                id: 2,\n                host: \"GitHub\",\n                type: \"Backend\",\n                link: \"https://github.com/pjhg14/phase5-project-backend\"\n            }\n        ],\n        requirements: [],\n        technologies: [\n            {\n                id: 1,\n                name: \"React\"\n            },\n            {\n                id: 2,\n                name: \"JavaScript\"\n            },\n            {\n                id: 3,\n                name: \"Node.js\"\n            },\n            {\n                id: 4,\n                name: \"Ruby\"\n            },\n            {\n                id: 6,\n                name: \"Rails\"\n            }\n        ],\n        video_url: \"\",\n        live_url: \"\",\n        complexity: 3,\n        image: \"assets/career-pad-dashboard.png\"\n    }\n]\n\nexport default function ProjectPage() {\n    const [projects] = useState(initialProjects)\n    // const [projects, setProjects] = useState([])\n    const [state, dispatch] = useReducer(modalReducer, initialState)\n    const [filter, setFilter] = useState(\"none\")\n    const [isAsc, setIsAsc] = useState(true)\n\n    useEffect(() => {\n        // get actual list of projects\n        // fetch(projectURL)\n        //     .then(resp => resp.json())\n        //     .then(queriedProjects => {\n        //         // if no image replace empty string with default image \n        //         setProjects(queriedProjects)\n        //     })\n    },[])\n\n    const sortedProjects = projects.sort((projectA, projectB) => {\n        switch (filter) {\n            case \"date\":\n                return isAsc ? projectA.completion_date - projectB.completion_date : projectB.completion_date - projectA.completion_date\n            case \"complexity\":\n                return isAsc ? projectA.complexity - projectB.complexity : projectB.complexity - projectA.complexity\n            default:\n                return isAsc ? projectA.id - projectB.id : projectB.id - projectA.id\n        }\n    })\n\n    return(\n        <ModalContext.Provider value={\n            {\n                state,\n                dispatch\n            }\n        }>\n            <main className=\"projects\">\n                <ProjectModal />\n                <h2>A list of what I have done</h2>\n                <div className=\"filter-bar\">\n                    <label htmlFor=\"filter\">Filter By:</label>\n                    <select id=\"filter\" name=\"filter\" onChange={e => setFilter(e.target.value)}>\n                        <option value=\"none\">Default</option>\n                        <option value=\"date\">Date Completed</option>\n                        <option value=\"complexity\">Complexity</option>\n                    </select>\n                    <button \n                        className={`direction-toggle ${isAsc ? \"ascending\" : \"descending\"}`} \n                        onClick={() => setIsAsc(!isAsc)}\n                    >\n                        {isAsc ? \"ASC\" : \"DEC\"}\n                    </button>\n                </div>\n                <ProjectList projects={sortedProjects}/>\n            </main>\n        </ModalContext.Provider>\n    )\n}","export default function LandingPage() {\n    return(\n        <main className=\"landing centered\">\n            <h1 className=\"main-title\">My name is</h1>\n            <h1 className=\"name-title\">Paul Graham Jr.</h1>\n            <h2 className=\"sub-title\">Welcome to my website</h2>\n\n            {/* content should change based on screen size */}\n            <p className=\"instructions\">Click on {\"\\\">\\\"\"} to navigate through the site</p>\n            <p className=\"mobile-instructions\">Click on the icons at the bottom to navigate through the site</p>\n        </main>\n    )\n}","export default function AboutPage() {\n    return(\n        <main className=\"about\">\n            <h2>About me</h2>\n            <div className=\"about-content\"> \n                <section className=\"profile-card\">\n                    <div className=\"profile-card-content\">\n                        <div className=\"profile-card-front\">\n                            <img  src=\"/assets/PG-profile-pic.jpg\" alt=\"card front\"/>\n                        </div>\n\n                        <div className=\"profile-card-back\">\n                            <img src=\"/assets/Card-back.png\" alt=\"card back\"/>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"summary\">\n                    <p>\n                        I am a software developer specializing in the development of frontend, backend, and fullstack web applications \n                        as well as fullstack and monolithic desktop applications. \n                    </p>\n                    <p>\n                        I greatly enjoy the act of creating useful, in-depth applications that aid in the day to day for the end user \n                        and further enjoy the mitigation of menial tasks through effieient automation and other techniques\n                    </p>\n                    <p>\n                        I have also graduated from Flatiron School and have my associates degree from Brookdale Community College; \n                        with experience from both and my background in customer service, I strive to provide the best and brightest \n                        for those I work for and work with\n                    </p>\n                    \n                </section>\n            </div>\n            <section className=\"languages\">\n                <h4>Languages and Frameworks I am proficient with:</h4>\n                <p className=\"lang-list\">\n                    Java\n                    JavaScript\n                    HTML\n                    CSS\n                    Ruby\n                    Rails\n                    React\n                    Node.js\n                    MySQL\n                    PostreSQL\n                </p>\n            </section>\n        </main>\n    )\n}\n\n/*\n    <div className=\"about\"> \n        <img className=\"profile-pic skele-bg\" src=\"/assets/PG-profile-pic-city.png\" alt=\"profile-pic\" />\n        <section className=\"overview\">\n            <p className=\"summary\">\n                I am a software developer specializing in the development of frontend, backend, and fullstack web applications \n                    as well as fullstack and monolithic desktop applications. \n                I greatly enjoy the act of creating useful, in-depth applications that aid in the day to day for the end user \n                    and further enjoy the mitigation of menial tasks through effieient automation and other techniques\n                I have also graduated from Flatiron School and have my associates degree from Brookdale Community College; \n                    with experience from both and my background in customer service, I strive to provide the best and brightest \n                    for those I work for and work with\n            </p>\n            <h3>I have experience with:</h3>\n            <p className=\"technologies\">\n                Java\n                JavaScript\n                HTML\n                CSS\n                Ruby\n                Rails\n                React\n                Node.js\n                MySQL\n                PostreSQL\n            </p>\n        </section>\n    </div>\n*/","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function ContactPage() {\n    return(\n        <main>\n            <h2>Find me here</h2>\n            <section className=\"links\">\n                <a className=\"contact-link redirecting\" href=\"https://www.linkedin.com/in/pgrahamjr\" target=\"_blank\" rel=\"noreferrer\">\n                    <FontAwesomeIcon className=\"icon linkedin\" icon={faLinkedin}/>\n                    https://www.linkedin.com/in/pgrahamjr/\n                </a>\n                <a className=\"contact-link redirecting\" href=\"https://github.com/pjhg14\" target=\"_blank\" rel=\"noreferrer\">\n                    <FontAwesomeIcon className=\"icon\" icon={faGithub} />\n                    https://github.com/pjhg14\n                </a>\n                <p className=\"contact-link\">\n                    <FontAwesomeIcon className=\"icon gmail\" icon={faEnvelope} />\n                    paulhgrahamjr@gmail.com\n                </p>\n            </section>\n            {/* TODO: Email Form */}\n            {/* \n                <form className=\"email-form\">\n                    <label className=\"form-label\" htmlFor=\"name\">Name / Email</label>\n                    <input id=\"name\" className=\"form-input\" type=\"text\"/>\n\n                    <label className=\"form-label\" htmlFor=\"subject\">Subject</label>\n                    <input id=\"subject\" className=\"form-input\" type=\"text\"/>\n\n                    <label className=\"form-label\" htmlFor=\"message\">Message</label>\n                    <textarea id=\"message\" className=\"form-input\" />\n\n                    <input type=\"submit\" />\n                </form> \n            */}\n        </main>\n    )\n}","import { Route, Switch } from \"react-router\";\nimport ProjectPage from \"./content/projects/ProjectPage\";\nimport LandingPage from \"./content/LandingPage\";\nimport AboutPage from \"./content/AboutPage\";\nimport ContactPage from \"./content/ContactPage\";\n\nfunction MainContent() {\n    return(\n        <Switch>\n            <Route exact path=\"/\">\n                <LandingPage />\n            </Route>\n            <Route path={\"/about\"}>\n                <AboutPage />\n            </Route>\n            <Route path={\"/projects\"}>\n                <ProjectPage />\n            </Route>\n            <Route path={\"/links\"}>\n                <ContactPage />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default MainContent","export default __webpack_public_path__ + \"static/media/Paul_G_resume_ca2021.033281f6.pdf\";","import { useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport resume from \"../resume/Paul_G_resume_ca2021.pdf\";\n\nfunction Navigation({ isDarkTheme, setIsDarkTheme }) {\n    const [active, setActive] = useState(false)\n\n    function toggleActive() {\n        setActive(!active)\n    }\n\n    function toggleDarkTheme() {\n        setIsDarkTheme(!isDarkTheme)\n    }\n\n    return(\n        <div className={`sidebar ${active ? \"active\" : \"\"}`}>\n            <nav className=\"navigation\">\n                <p className=\"nav-title\">Menu</p>\n                <NavLink className=\"nav-button\" exact to=\"/\">\n                    {/* image? here */}\n                    <span>Title</span>\n                </NavLink>\n                <NavLink className=\"nav-button\" to=\"/about\">\n                    <span>About</span>\n                </NavLink>\n                <NavLink className=\"nav-button\" to=\"/projects\">\n                    <span>Projects</span>\n                </NavLink>\n                <NavLink className=\"nav-button\" to=\"/links\">\n                    <span>Contact</span>\n                </NavLink>\n                <a className=\"nav-button\" href={resume} target=\"_blank\" rel=\"noreferrer\">\n                    <span>Resume</span>\n                </a>\n                <button className=\"nav-button theme\" href=\"#\" onClick={toggleDarkTheme}>\n                    <span>{isDarkTheme ? \"Light\" : \"Dark\"}</span>\n                </button>\n            </nav>\n            <div className=\"nav-aside\">\n                <button className=\"nav-tag\" onClick={toggleActive}>\n                    {active ? \"<\" : \">\"}\n                </button>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Navigation","import { useState } from 'react';\nimport './App.css';\nimport MainContent from './components/MainContent';\nimport Navigation from './components/Navigation';\n\nfunction App() {\n    const [isDarkTheme, setIsDarkTheme] = useState(true)    \n\n    return (\n        <div className={`App ${isDarkTheme ? \"\" : \"light\"}`}>\n            <Navigation isDarkTheme={isDarkTheme} setIsDarkTheme={setIsDarkTheme}/>\n            <MainContent />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\n\nReactDOM.render(\n    <Router>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Router>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}